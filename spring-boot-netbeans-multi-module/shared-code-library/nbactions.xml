<?xml version="1.0" encoding="UTF-8"?>
<actions>
	<action>
		<actionName>rebuild</actionName>
		<packagings>
			<packaging>*</packaging>
		</packagings>
		<goals>
			<goal>clean</goal>
			<goal>install</goal>
		</goals>
		<activatedProfiles>
			<activatedProfile>skip-all-but-compilation-and-resources-and-unit-tests</activatedProfile>
			<activatedProfile>skip-unit-tests</activatedProfile>
		</activatedProfiles>
	</action>
	<action>
		<actionName>build</actionName>
		<packagings>
			<packaging>*</packaging>
		</packagings>
		<goals>
			<goal>install</goal>
		</goals>
		<activatedProfiles>
			<activatedProfile>skip-all-but-compilation-and-resources-and-unit-tests</activatedProfile>
			<activatedProfile>skip-unit-tests</activatedProfile>
		</activatedProfiles>
	</action>
	<action>
		<actionName>debug</actionName>
		<packagings>
			<packaging>jar</packaging>
		</packagings>
		<goals>
			<goal>spring-boot:run</goal>
		</goals>
		<properties>
			<jpda.listen>true</jpda.listen>
			<spring-boot.run.jvmArguments>-Xdebug -Xrunjdwp:transport=dt_socket,server=n,address=${jpda.address}</spring-boot.run.jvmArguments>
			<Env.SPRING_OUTPUT_ANSI_ENABLED>always</Env.SPRING_OUTPUT_ANSI_ENABLED>
		</properties>
		<activatedProfiles>
			<activatedProfile>skip-all-but-compilation-and-resources-and-unit-tests</activatedProfile>
			<activatedProfile>skip-unit-tests</activatedProfile>
			<activatedProfile>skip-flattening</activatedProfile>
		</activatedProfiles>
	</action>
	<action>
		<actionName>run</actionName>
		<packagings>
			<packaging>jar</packaging>
		</packagings>
		<goals>
			<goal>spring-boot:run</goal>
		</goals>
		<properties>
			<Env.SPRING_OUTPUT_ANSI_ENABLED>always</Env.SPRING_OUTPUT_ANSI_ENABLED>
		</properties>
		<activatedProfiles>
			<activatedProfile>skip-all-but-compilation-and-resources-and-unit-tests</activatedProfile>
			<activatedProfile>skip-unit-tests</activatedProfile>
			<activatedProfile>skip-flattening</activatedProfile>
		</activatedProfiles>
	</action>
	<action>
		<actionName>test</actionName>
		<packagings>
			<packaging>*</packaging>
		</packagings>
		<goals>
			<goal>test</goal>
		</goals>
		<activatedProfiles>
			<activatedProfile>skip-all-but-compilation-and-resources-and-unit-tests</activatedProfile>
			<activatedProfile>skip-flattening</activatedProfile>
		</activatedProfiles>
	</action>
	<action>
		<actionName>test.single</actionName>
		<packagings>
			<packaging>*</packaging>
		</packagings>
		<goals>
			<goal>process-test-classes</goal>
			<goal>surefire:test</goal>
		</goals>
		<properties>
			<test>${packageClassName}</test>
			<argLine>-Dlogback.root.log.level=INFO</argLine>
		</properties>
		<activatedProfiles>
			<activatedProfile>skip-all-but-compilation-and-resources-and-unit-tests</activatedProfile>
			<activatedProfile>skip-flattening</activatedProfile>
		</activatedProfiles>
	</action>
	<action>
		<actionName>debug.test.single</actionName>
		<packagings>
			<packaging>*</packaging>
		</packagings>
		<goals>
			<goal>process-test-classes</goal>
			<goal>surefire:test</goal>
		</goals>
		<properties>
			<test>${packageClassName}</test>
			<forkMode>once</forkMode>
			<maven.surefire.debug>-agentlib:jdwp=transport=dt_socket,server=n,address=${jpda.address}</maven.surefire.debug>
			<jpda.listen>true</jpda.listen>
			<argLine>-Dlogback.root.log.level=INFO</argLine>
		</properties>
		<activatedProfiles>
			<activatedProfile>skip-all-but-compilation-and-resources-and-unit-tests</activatedProfile>
			<activatedProfile>skip-flattening</activatedProfile>
		</activatedProfiles>
	</action>	
	<action>
		<actionName>integration-test.single</actionName>
		<packagings>
			<packaging>*</packaging>
		</packagings>
		<goals>
			<goal>process-test-classes</goal>
			<goal>failsafe:integration-test</goal>
		</goals>
		<properties>
			<test>DummyToSkipUnitTests</test>
			<failIfNoTests>false</failIfNoTests>
			<it.test>${packageClassName}</it.test>
			<argLine>-Dlogback.root.log.level=INFO</argLine>
		</properties>
		<activatedProfiles>
			<activatedProfile>skip-all-but-compilation-and-resources-and-unit-tests</activatedProfile>
			<activatedProfile>skip-flattening</activatedProfile>
		</activatedProfiles>
	</action>
	<action>
		<actionName>debug.integration-test.single</actionName>
		<packagings>
			<packaging>*</packaging>
		</packagings>
		<goals>
			<goal>process-test-classes</goal>
			<goal>failsafe:integration-test</goal>
		</goals>
		<properties>
			<test>DummyToSkipUnitTests</test>
			<failIfNoTests>false</failIfNoTests>
			<it.test>${packageClassName}</it.test>
			<forkMode>once</forkMode>
			<maven.failsafe.debug>-agentlib:jdwp=transport=dt_socket,server=n,address=${jpda.address}</maven.failsafe.debug>
			<jpda.listen>true</jpda.listen>
		</properties>
		<activatedProfiles>
			<activatedProfile>skip-all-but-compilation-and-resources-and-unit-tests</activatedProfile>
			<activatedProfile>skip-flattening</activatedProfile>
		</activatedProfiles>
	</action>	
	<action>
		<actionName>CUSTOM-Full Build</actionName>
		<displayName>Full Build</displayName>
		<goals>
			<goal>clean</goal>
			<goal>install</goal>
		</goals>
	</action>
	<action>
		<actionName>CUSTOM-Format Code</actionName>
		<displayName>Format Code</displayName>
		<goals>
			<goal>impsort:sort</goal>
			<goal>spring-javaformat:apply</goal>
		</goals>
	</action>
	<action>
		<actionName>CUSTOM-Format Code</actionName>
		<displayName>Format Code</displayName>
		<goals>
			<goal>impsort:sort</goal>
			<goal>spring-javaformat:apply</goal>
		</goals>
		<properties>
			<spring-javaformat.includes>**/${classNameWithExtension}</spring-javaformat.includes>
			<impsort.includes>**/${classNameWithExtension}</impsort.includes>
		</properties>
	</action> 
	<action>
		<actionName>CUSTOM-Integration Test</actionName>
		<displayName>Integration Test</displayName>
		<goals>
			<goal>failsafe:integration-test</goal>
		</goals>
	</action>
	<action>
		<actionName>CUSTOM-Test Gap Analysis (Unit Test only)</actionName>
		<displayName>Test Gap Analysis (Unit Test only)</displayName>
		<goals>
			<goal>com.scheible.testgapanalysis:test-gap-analysis-maven-plugin:1.2.1:clean-jacoco-reports</goal>
			<goal>jacoco:prepare-agent</goal>
			<goal>surefire:test</goal>
			<goal>jacoco:report</goal>
			<goal>com.scheible.testgapanalysis:test-gap-analysis-maven-plugin:1.2.1:perform</goal>
		</goals>
	</action>		
	<action>
		<actionName>CUSTOM-Test Gap Analysis</actionName>
		<displayName>Test Gap Analysis</displayName>
		<goals>
			<goal>com.scheible.testgapanalysis:test-gap-analysis-maven-plugin:1.2.1:clean-jacoco-reports</goal>
			<goal>jacoco:prepare-agent</goal>
			<goal>surefire:test</goal>
			<goal>jacoco:prepare-agent-integration</goal>
			<goal>failsafe:integration-test</goal>
			<goal>jacoco:report</goal>
			<goal>jacoco:report-integration</goal>
			<goal>com.scheible.testgapanalysis:test-gap-analysis-maven-plugin:1.2.1:perform</goal>
		</goals>
	</action>
	<action>
		<actionName>CUSTOM-Mutation Coverage</actionName>
		<displayName>Mutation Coverage</displayName>
		<goals>
			<goal>org.pitest:pitest-maven:mutationCoverage</goal>
		</goals>
	</action>
	<action>
		<actionName>CUSTOM-Static Code Analysis</actionName>
		<displayName>Static Code Analysis</displayName>
		<goals>
			<goal>checkstyle:check</goal>
			<goal>pmd:cpd-check</goal>
			<goal>pmd:check</goal>
			<goal>arch-unit:arch-test</goal>
			<goal>de.thetaphi:forbiddenapis:check@check-forbiddenapis</goal>
			<goal>de.thetaphi:forbiddenapis:check@check-forbidden-test-apis</goal>
		</goals>
	</action>
	<action>
		<actionName>CUSTOM-CheckStyle</actionName>
		<displayName>CheckStyle</displayName>
		<goals>
			<goal>checkstyle:check</goal>
		</goals>
	</action>
	<action>
		<actionName>CUSTOM-PMD</actionName>
		<displayName>PMD</displayName>
		<goals>
			<goal>pmd:check</goal>
		</goals>
	</action>	
	<action>
		<actionName>CUSTOM-Clone Detection</actionName>
		<displayName>Clone Detection</displayName>
		<goals>
			<goal>pmd:cpd-check</goal>
		</goals>
	</action>
	<action>
		<actionName>CUSTOM-ArchUnit Maven plugin</actionName>
		<displayName>ArchUnit Maven plugin</displayName>
		<goals>
			<goal>arch-unit:arch-test</goal>
		</goals>
	</action>
	<action>
		<actionName>CUSTOM-Forbidden API Checker</actionName>
		<displayName>Forbidden API Checker</displayName>
		<goals>
			<goal>de.thetaphi:forbiddenapis:check@check-forbiddenapis</goal>
			<goal>de.thetaphi:forbiddenapis:check@check-forbidden-test-apis</goal>			
		</goals>
	</action>
	<action>
		<actionName>CUSTOM-Dependency Tree</actionName>
		<displayName>Dependency Tree</displayName>
		<goals>
			<goal>dependency:tree</goal>
		</goals>
	</action>
	<action>
		<actionName>CUSTOM-Dependency Graph</actionName>
		<displayName>Dependency Graph</displayName>
		<goals>
			<goal>com.github.ferstl:depgraph-maven-plugin:graph</goal>
		</goals>
		<properties>
			<showConflicts>true</showConflicts>
			<showDuplicates>true</showDuplicates>
			<showVersions>true</showVersions>
			<graphFormat>gml</graphFormat>
			<scope>compile</scope>
		</properties>
	</action>
	<action>
		<actionName>CUSTOM-POM Hierarchy Tree</actionName>
		<displayName>POM Hierarchy Tree</displayName>
		<goals>
			<goal>com.github.exampledriven:hierarchy-maven-plugin:tree</goal>
		</goals>
	</action>
	<action>
		<actionName>CUSTOM-Sortpom</actionName>
		<displayName>Sortpom</displayName>
		<goals>
			<goal>sortpom:sort</goal>
		</goals>
	</action> 
	<action>
		<actionName>CUSTOM-Enforce Dependency Convergence</actionName>
		<displayName>Enforce Dependency Convergence</displayName>
		<goals>
			<goal>enforcer:enforce@dependency-convergence</goal>
		</goals>
	</action>
	<action>
		<actionName>CUSTOM-Available Dependency Updates</actionName>
		<displayName>Available Dependency Updates</displayName>
		<goals>
			<goal>versions:display-dependency-updates</goal>
		</goals>
	</action>
	<action>
		<actionName>CUSTOM-Source Lines of Code</actionName>
		<displayName>Source Lines of Code</displayName>
		<goals>
			<goal>kupusoglu.orhan:sloc-maven-plugin:sloc</goal>
		</goals>
	</action>
	<action>
		<actionName>CUSTOM-PIT Mutation Test</actionName>
		<displayName>PIT Mutation Test</displayName>
		<goals>
			<goal>org.pitest:pitest-maven:mutationCoverage</goal>
		</goals>
	</action>
</actions>
